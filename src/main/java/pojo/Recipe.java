package pojo;

import java.awt.Image;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.faces.bean.ManagedBean;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Transient;
import javax.servlet.http.Part;

import dao.AdminDAO;
import dao.RecipeDAO;

// default package
// Generated Sep 21, 2018 11:34:42 PM by Hibernate Tools 5.2.11.Final

/**
 * Recipe generated by hbm2java
 */
@ManagedBean
@Entity
public class Recipe implements java.io.Serializable {
	
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Integer idrecipe;
	private String name;
	private String ingredients;
	private String directions;
	private String time;
	private int difficulty;
	private int servings;
	private String category;
	private String imgpath;
	private int idadmin;
	
	@Transient
	private Part image;
	
	@Transient
	private boolean uploaded;
	
	@Transient
	private int selectedID;
	
	@Transient
	private int currentAdmin;
	
	@Transient
	private String bahan1,bahan2,step;

	public Recipe() {
	}
	
	public int getCurrentAdmin() {
		return currentAdmin;
	}

	public void setCurrentAdmin(int currentAdmin) {
		this.currentAdmin = currentAdmin;
	}

	public Part getImage() {
		return image;
	}
	public int getSelectedID() {
		return selectedID;
	}
	public int getIdadmin() {
		return idadmin;
	}
	public void setIdadmin(int idadmin) {
		this.idadmin = idadmin;
	}
	public void setSelectedID(int selectedID) {
		this.selectedID = selectedID;
	}
	public void setImage(Part image) {
		this.image = image;
	}

	public boolean isUploaded() {
		return uploaded;
	}

	public void setUploaded(boolean uploaded) {
		this.uploaded = uploaded;
	}

	public Recipe(String name, String ingredients, String directions, String time, int difficulty, int servings,
			String category, String imgpath, int idadmin) {
		this.name = name;
		this.ingredients = ingredients;
		this.directions = directions;
		this.time = time;
		this.difficulty = difficulty;
		this.servings = servings;
		this.category = category;
		this.imgpath = imgpath;
		this.idadmin = idadmin;
	}

	public Integer getIdrecipe() {
		return this.idrecipe;
	}

	public void setIdrecipe(Integer idrecipe) {
		this.idrecipe = idrecipe;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getIngredients() {
		return this.ingredients;
	}

	public void setIngredients(String ingredients) {
		this.ingredients = ingredients;
	}

	public String getDirections() {
		return this.directions;
	}

	public void setDirections(String directions) {
		this.directions = directions;
	}

	public String getTime() {
		return this.time;
	}

	public void setTime(String time) {
		this.time = time;
	}

	public int getDifficulty() {
		return this.difficulty;
	}

	public void setDifficulty(int difficulty) {
		this.difficulty = difficulty;
	}

	public int getServings() {
		return this.servings;
	}

	public void setServings(int servings) {
		this.servings = servings;
	}

	public String getCategory() {
		return this.category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	public String getImgpath() {
		return this.imgpath;
	}

	public void setImgpath(String imgpath) {
		this.imgpath = imgpath;
	}
	public List<Recipe> getAllNameImgRecipe(){
		RecipeDAO dao = new RecipeDAO();
		List<Object[]> nameImage = dao.getAllNameImgRecipe();
		List<Recipe> list= new ArrayList<Recipe>();
		for (Object[] temp : nameImage) {
			Recipe obj = new Recipe();
			obj.setName(String.valueOf(temp[0]));
			obj.setImgpath(String.valueOf(temp[1]));
			list.add(obj);
		}
		return list;
	} 
	
	public void addRecipe() {
		RecipeDAO dao = new RecipeDAO();
		setImgpath(doUpload());
		setIdadmin(this.currentAdmin);
		dao.addNewRecipe(this);
		clearAll();
	}
	
	public List<Recipe> getAllRecipe() {
		RecipeDAO dao = new RecipeDAO();
		return dao.getAllRecipe();
	}

	public List<Recipe> getAllRecipeID() {
		RecipeDAO dao = new RecipeDAO();
		return dao.getAllRecipeID();
	}

	public void getRecipeById() {
		RecipeDAO dao = new RecipeDAO();
		Recipe k = dao.getRecipeById(this);
		setCategory(k.category);
		setDifficulty(k.difficulty);
		setDirections(k.directions);
		setImgpath(k.imgpath);
		setIngredients(k.ingredients);
		setName(k.name);
		setServings(k.servings);
		setTime(k.time);
		setIdrecipe(k.idrecipe);
		setIdadmin(k.idadmin);
	}
	
	public List<Recipe> getRecipeByCategory() {
		RecipeDAO dao = new RecipeDAO();
		return dao.getRecipeByCategory(this.category);
	}
	
	public List<Integer> getStar() {
		List<Integer> star = new ArrayList<Integer>();
		for (int i = 1; i <= this.difficulty ; i++) {
			star.add(i);
		}
		return star;
	}
	
	public List<Recipe> getDirectionToList(){
		List<Recipe> recipe= new ArrayList<Recipe>();
		//split string with enter
		String[] split = this.directions.split("\\r?\\n");
		for (String string : split) {
			Recipe r = new Recipe();
			r.setStep(string);
			recipe.add(r);
		}
		return recipe;
	}
	
	public List<Recipe> getIngredientsToList(){
		List<Recipe> recipe = new ArrayList<Recipe>();
		//split string with enter
		String[] split = this.ingredients.split("\\r?\\n"); 
		for (String string : split) {
			//split string with first space
			String[] split2 =string.split(" ",2);
			for (int i = 0; i < split2.length/2; i++) {
					Recipe r = new Recipe();
					String s1 =split2[i];
					String s2 = split2[i+1];
					r.setBahan1(s1);
					r.setBahan2(s2);
					recipe.add(r);
			}
		}
		for (Recipe r : recipe) {
			System.out.println(r.getBahan1());
			System.out.println(r.getBahan2());
		}
		return recipe;
	}

	public void updateRecipe() {
		RecipeDAO dao = new RecipeDAO();
		setIdrecipe(selectedID);
		if(doUpload()==null || doUpload().equals("")) {
			setImgpath(dao.getImageById(this.idrecipe));
		} else {
			setImgpath(doUpload());
		}
		setIdadmin(this.currentAdmin);
		dao.updateRecipe(this);
		clearAll();
	}

	public void deleteRecipe() {
		RecipeDAO dao = new RecipeDAO();
		setIdrecipe(selectedID);
		dao.deleteRecipe(this);
		clearAll();
	}
	
	public String getAdminNameById() {
		AdminDAO dao = new AdminDAO();
		return dao.getAdminNameById(idadmin);
	}
	
	public void clearAll() {
		setCategory(null);
		setDifficulty(0);
		setDirections(null);
		setImgpath(null);
		setIngredients(null);
		setName(null);
		setServings(0);
		setTime(null);
	}
	
	public String doUpload() {
		String path = null;
		String pathValue = null;
		try {
			InputStream in = image.getInputStream();
			File f = new File("D:\\eclipse-workspace\\RecipeBook\\src\\main\\webapp\\images\\"+image.getSubmittedFileName());
			f.createNewFile();
			FileOutputStream out = new FileOutputStream(f);
			
			byte[] buffer = new byte[1024];
			int length;
			while ((length=in.read(buffer))>0){
				out.write(buffer, 0, length);
			}
			out.close();
			in.close();
			
			path = String.valueOf(f.getAbsolutePath());
			setUploaded(true);
			pathValue = "images\\"+image.getSubmittedFileName();
			System.out.println("upload success");
		} catch (Exception e) {
			System.out.println(e);
		}
		return pathValue;
	}
	
	@Override
	public String toString() {
		return "Recipe [idrecipe=" + idrecipe + ", name=" + name + ", ingredients=" + ingredients + ", directions="
				+ directions + ", time=" + time + ", difficulty=" + difficulty + ", servings=" + servings
				+ ", category=" + category + ", imgpath=" + imgpath + ", idadmin=" + idadmin + ", selectedID="
				+ selectedID + "]";
	}

	public String getBahan1() {
		return bahan1;
	}
	public void setBahan1(String bahan1) {
		this.bahan1 = bahan1;
	}
	public String getBahan2() {
		return bahan2;
	}
	public void setBahan2(String bahan2) {
		this.bahan2 = bahan2;
	}
	public String getStep() {
		return step;
	}
	public void setStep(String step) {
		this.step = step;
	}
	
	
}
